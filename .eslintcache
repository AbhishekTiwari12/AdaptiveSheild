[{"/Users/abhishek/Desktop/adaptivefinal/src/index.js":"1","/Users/abhishek/Desktop/adaptivefinal/src/App.js":"2","/Users/abhishek/Desktop/adaptivefinal/src/ShieldSetup.js":"3","/Users/abhishek/Desktop/adaptivefinal/src/Accountsummary.js":"4","/Users/abhishek/Desktop/adaptivefinal/src/ConfirmationScreen.js":"5","/Users/abhishek/Desktop/adaptivefinal/src/Success.js":"6","/Users/abhishek/Desktop/adaptivefinal/src/Slider.js":"7","/Users/abhishek/Desktop/adaptivefinal/src/graphs.js":"8","/Users/abhishek/Desktop/adaptivefinal/src/aws-exports.js":"9","/Users/abhishek/Desktop/adaptivefinal/src/Quote.js":"10","/Users/abhishek/Desktop/adaptivefinal/src/AddStocks.js":"11","/Users/abhishek/Desktop/adaptivefinal/src/UpdateStockList.js":"12","/Users/abhishek/Desktop/adaptivefinal/src/DeletsScreen.js":"13","/Users/abhishek/Desktop/adaptivefinal/src/DeleteStock.js":"14","/Users/abhishek/Desktop/adaptivefinal/src/UpdateScreen.js":"15","/Users/abhishek/Desktop/adaptivefinal/src/UpdateStocks.js":"16","/Users/abhishek/Desktop/adaptivefinal/src/table.js":"17"},{"size":260,"mtime":1608742804538,"results":"18","hashOfConfig":"19"},{"size":1109,"mtime":1608799823994,"results":"20","hashOfConfig":"19"},{"size":14646,"mtime":1610764812556,"results":"21","hashOfConfig":"19"},{"size":11931,"mtime":1610764074926,"results":"22","hashOfConfig":"19"},{"size":4403,"mtime":1610764504220,"results":"23","hashOfConfig":"19"},{"size":3952,"mtime":1610763465302,"results":"24","hashOfConfig":"19"},{"size":1093,"mtime":1608702633726,"results":"25","hashOfConfig":"19"},{"size":807,"mtime":1607106044000,"results":"26","hashOfConfig":"19"},{"size":469,"mtime":1607141675460,"results":"27","hashOfConfig":"19"},{"size":788,"mtime":1607525323650,"results":"28","hashOfConfig":"19"},{"size":2230,"mtime":1610352221365,"results":"29","hashOfConfig":"19"},{"size":658,"mtime":1609816389188,"results":"30","hashOfConfig":"19"},{"size":1847,"mtime":1609819019929,"results":"31","hashOfConfig":"19"},{"size":586,"mtime":1609814751843,"results":"32","hashOfConfig":"19"},{"size":2178,"mtime":1609819811118,"results":"33","hashOfConfig":"19"},{"size":649,"mtime":1608799432880,"results":"34","hashOfConfig":"19"},{"size":3816,"mtime":1610762622354,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"q2vpv2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/abhishek/Desktop/adaptivefinal/src/index.js",[],["73","74"],"/Users/abhishek/Desktop/adaptivefinal/src/App.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/ShieldSetup.js",["75","76","77","78","79"],"/Users/abhishek/Desktop/adaptivefinal/src/Accountsummary.js",["80","81","82"],"import React from \"react\";\nimport StockChart from \"./graphs\";\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Auth } from \"aws-amplify\";\nimport \"./sliderStyle.css\";\n\n// Sends the list of stocks to the add, delete and update screens.\n// Every Add, update or delete action is verified using this list\nvar arr = [];\nexport function sendList() {\n  var arr1 = arr;\n  return arr1;\n}\nvar checked = false;\n\nexport function ChangeShieldState(){\n  checked = true\n}\n\n//Function to fetch data, perform calculation for account total and render the screen\n//along with the table and the graph\nexport default function Accountsummary() {\n  //useHistory() hook is used to facilitate navigation between pages\n  const history = useHistory();\n  const handleClick = () => history.push(\"/ShieldSetup\");\n  const handleClick2 = () => history.push(\"/AddStocks\");\n  const handleClick3 = () => history.push(\"/DeleteScreen\");\n  const handleClick4 = () => history.push(\"/UpdateScreen\");\n\n  //Theme for the table\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\",\n    },\n    table: {\n      minWidth: 650,\n      size: \"small\",\n    },\n  }));\n\n  //Function to create data rows for the table\n  //Takes in 6 values and returns a rows that is rendered as a table row\n  function createData(Symbol, Quantity, Last, Previous, Change, Value) {\n    return { Symbol, Quantity, Last, Previous, Change, Value };\n  }\n\n  //CSS for the elements on the page, will have no errors here, ignore in case of debugging.\n  const headings = {\n    marginTop: -20,\n    fontSize: 15,\n    textAlign: \"center\",\n    color: \"#000000\",\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    background: \"rgba(232, 236, 241, 0.3)\",\n  };\n  const content = {\n    position: \"relative\",\n    width: 470,\n    margin: \"auto\",\n    fontSize: 20,\n    color: \"#000000\",\n    fontWeight: \"Bold\",\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    textAlign: \"Left\",\n  };\n  const shieldButton = {\n    paddingTop: 70,\n    textAlign: \"center\",\n    width: 300,\n    margin: \"auto\",\n  };\n  const Datast = {\n    fontSize: 20,\n    color: \"#000000\",\n    paddingLeft: 20,\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    textAlign: \"right\",\n    fontWeight: \"Normal\",\n  };\n  const Datast2 = {\n    fontSize: 20,\n    color: \"#50c878\",\n    paddingLeft: 20,\n    fontFamily: \"Helvetica\",\n    textAlign: \"right\",\n    fontWeight: \"Normal\",\n  };\n\n  const addStockButton = {\n    paddingTop: 20,\n    textAlign: \"left\",\n    position: \"relative\",\n    float: \"right\",\n    paddingBottom: 10,\n  };\n  const table = {\n    position: \"relative\",\n    margin: \"auto\",\n    maxWidth: 700,\n  };\n  const graphSt = {\n    position: \"relative\",\n    margin: \"auto\",\n    maxWidth: 900,\n  };\n\n  const tableHeader = {\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    textAlign: \"center\",\n    marginTop: 30,\n    fontWeight: \"Bold\",\n    fontSize: 20,\n  };\n  const sliderPos = {\n    marginTop: 40,\n    width: 200,\n    position: \"relative\",\n    margin: \"auto\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 50,\n  };\n\n  var rows2 = []; // rows2 holds the initial stock data as returned by the API and sends it to setRows function.\n  //Custom react hook to re-render the screen everytime portofolio data is returned by the API, the new data(passed by rows2)\n  //is stored in the rows variable\n  const [rows, setRows] = React.useState([]);\n\n  var sum = 0; //sum holds the initial value for \"Balance\", passes it on to setSum function.\n  //react hook to re-render the screen everytime the value of \"Balance\" changes, the new total(passed by sum) is stored in the rows\n  //variable\n  const [sum1, setSum] = React.useState(0);\n\n  var prevTotal = 0; //Holds the total portfolio value for the previous trading day, passes it on to the setPrevtotal fucntion\n  //react hook to re-render the screen everytime new data is avaialable for prevoius day, the variable prevTotal1 is used to calculate gain/loss.\n  const [prevTotal1, setPrevtotal] = React.useState(0);\n\n  const [user, setUser] = React.useState(\"\"); //Has data of the current logged-in user\n\n  var lyst = []; //Has basic stock data before it is assigned to the rows2 variable\n\n  getUserData(); //Calling the getUserData() function\n\n  //gets data for the current logged-in user from AWS api\n  function loadUser() {\n    return Auth.currentAuthenticatedUser({ bypassCache: true });\n  }\n\n  //function to store the user data in the user variable\n  async function getUserData() {\n    try {\n      //waiting for the loadUser() function to finish resolving, store the returned value in logged variable post resolve.\n      const logged = await loadUser();\n      //passing it onto the setUser hook to be stored into the user variable.\n      setUser(logged.username);\n    } catch (e) {\n      //catching errors\n      alert(e);\n    }\n  }\n\n  //fucntion to get data for the portfolio-table and total balance.\n  async function getData() {\n    //defining the requestOptions\n    var requestOptions = {\n      method: \"POST\",\n      redirect: \"follow\",\n    };\n    //creating the request, waiting for it to finish, storing the fetched value in the response variable\n    const response = await fetch(\n      \"https://7yseqgoxea.execute-api.us-east-1.amazonaws.com/dev/fetch-customer-portfolio\",\n      requestOptions\n    );\n    //Throw an error if API returns an error\n    if (!response.ok) {\n      const message = `An error has occured: ${response.status}`;\n      throw new Error(message);\n    }\n    //Storing the raw json data returned by the API\n    const stockList_raw = await response.json();\n    //going 1 level down in the JSON response(\"clientPortfolio\" is the head key for the response)\n    const stockList = stockList_raw[\"clientPortfolio\"];\n    //looping through the parsed stockList, pushing the stock data as a row in the lyst variable\n    for (var i = 0; i < stockList.length; i++) {\n      lyst.push([\n        stockList[i][\"Symbol\"],\n        stockList[i][\"Quantity\"],\n        stockList[i][\"todays_close\"],\n        stockList[i][\"percentage_difference\"],\n        stockList[i][\"yesterdays_close\"],\n      ]);\n      //Adding today's prices to the sum variable\n      sum = sum + stockList[i][\"Quantity\"] * stockList[i][\"todays_close\"];\n      //Adding yesterday's prices to the prevTotal variable\n      prevTotal =\n        prevTotal + stockList[i][\"Quantity\"] * stockList[i][\"yesterdays_close\"];\n    }\n    //storing the total(final) values of the sum and prevTotal variables.\n    setSum(sum);\n    setPrevtotal(prevTotal);\n\n    arr = lyst; //store the lyst data in the arr variable, to be used for checks in the add, update, delete screens.\n\n    //Looping through the list having stock data, pushing the rows into rows2 after modifications.\n    for (i = 0; i < lyst.length; i++) {\n      rows2.push(\n        createData(\n          lyst[i][0],\n          lyst[i][1],\n          lyst[i][2].toFixed(2),\n          lyst[i][4].toFixed(2),\n          lyst[i][3].toFixed(2),\n          (lyst[i][1] * lyst[i][2]).toFixed(2)\n        )\n      );\n    }\n    //passing the data in rows2 to setRows function so that the screen re-renders if there is a change.\n    setRows(rows2);\n  }\n\n  const classes = useStyles();\n  // console.log(sum1.toFixed(2));\n  // console.log(\"Rows:\", rows);\n\n  getData(); //calling the getData() function\n\n  //Changing the colour of the G/L text to red if there is a loss\n  if ((sum1 - prevTotal1).toFixed(2) < 0) {\n    Datast2[\"color\"] = \"#EA421F\";\n  }\n  // rendering the elements, will not have issues until messed with, ignore when debugging.\n  return (\n    <React.Fragment>\n      <div style={headings}>\n        <h1>Account Summary</h1>\n      </div>\n      <div style={content}>\n        <table position=\"relative\" margin=\"auto\" width=\"500\" border=\"0\">\n          <caption align=\"left\">Your Balance Details:</caption>\n          <br></br>\n          <tr>\n            <td align=\"Right\">Advisor:</td>\n            <td align=\"left\">\n              <text style={Datast}>AdvisorName Capital</text>\n            </td>\n          </tr>\n          <tr>\n            <td align=\"Right\">Account:</td>\n            <td align=\"left\">\n              <text style={Datast}>{user}</text>\n            </td>\n          </tr>\n          <tr>\n            <td align=\"Right\">Account Balance:</td>\n            <td align=\"left\">\n              <text style={Datast}>\n                ${sum1.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </text>\n            </td>\n          </tr>\n          <tr>\n            <td align=\"Right\">Today's G/L:</td>\n            <td align=\"left\">\n              <text style={Datast2}>\n                $\n                {(sum1 - prevTotal1)\n                  .toFixed(2)\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </text>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div style={sliderPos}>\n        <div id=\"body\">\n          <input\n            id=\"chck\"\n            type=\"checkbox\"\n            defaultChecked={checked}\n            onChange={handleClick}\n          />\n          <label for=\"chck\" class=\"toggle\">\n            <span class=\"toggle-handler\"></span>\n          </label>\n        </div>\n      </div>\n      <div>\n        <div style={tableHeader}>\n          <text>Portfolio Positions:</text>\n        </div>\n        <div style={table}>\n          <Paper className={classes.root}>\n            <Table className={classes.table} aria-label=\"caption table\">\n              <caption>Stock Prices</caption>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">Symbol</TableCell>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                  <TableCell align=\"right\">Last Price</TableCell>\n                  <TableCell align=\"right\">Previous Close</TableCell>\n                  <TableCell align=\"right\">Change (%)</TableCell>\n                  <TableCell align=\"right\">Market Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell align=\"left\" component=\"th\" scope=\"row\">\n                      {row.Symbol}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.Quantity}</TableCell>\n                    <TableCell align=\"right\">\n                      ${row.Last.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      ${row.Previous.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.Change}%</TableCell>\n                    <TableCell align=\"right\">\n                      ${row.Value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n          <div style={addStockButton}>\n            <Button variant=\"outlined\" color=\"default\" onClick={handleClick4}>\n              UPDATE STOCKS\n            </Button>\n            <Button variant=\"outlined\" color=\"default\" onClick={handleClick3}>\n              DELETE STOCKS\n            </Button>\n            <Button variant=\"outlined\" color=\"default\" onClick={handleClick2}>\n              ADD STOCKS +\n            </Button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","/Users/abhishek/Desktop/adaptivefinal/src/ConfirmationScreen.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/Success.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/Slider.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/graphs.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/aws-exports.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/Quote.js",[],["83","84"],"/Users/abhishek/Desktop/adaptivefinal/src/AddStocks.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/UpdateStockList.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/DeletsScreen.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/DeleteStock.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/UpdateScreen.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/UpdateStocks.js",[],"/Users/abhishek/Desktop/adaptivefinal/src/table.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":18},{"ruleId":"89","severity":1,"message":"93","line":214,"column":9,"nodeType":"91","messageId":"92","endLine":214,"endColumn":21},{"ruleId":"89","severity":1,"message":"94","line":237,"column":9,"nodeType":"91","messageId":"92","endLine":237,"endColumn":17},{"ruleId":"89","severity":1,"message":"95","line":252,"column":9,"nodeType":"91","messageId":"92","endLine":252,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":310,"column":12,"nodeType":"98","messageId":"99","endLine":310,"endColumn":14},{"ruleId":"89","severity":1,"message":"100","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":18},{"ruleId":"89","severity":1,"message":"101","line":77,"column":9,"nodeType":"91","messageId":"92","endLine":77,"endColumn":21},{"ruleId":"89","severity":1,"message":"102","line":112,"column":9,"nodeType":"91","messageId":"92","endLine":112,"endColumn":16},{"ruleId":"85","replacedBy":"103"},{"ruleId":"87","replacedBy":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'slider_style' is assigned a value but never used.","'rightdiv' is assigned a value but never used.","'slider' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'StockChart' is defined but never used.","'shieldButton' is assigned a value but never used.","'graphSt' is assigned a value but never used.",["105"],["106"],"no-global-assign","no-unsafe-negation"]